define("dummy/app",["ember","ember/resolver","ember/load-initializers","dummy/config/environment","exports"],function(e,t,n,s,i){"use strict";var o=e["default"],a=t["default"],p=n["default"],r=s["default"];o.MODEL_FACTORY_INJECTIONS=!0;var l=o.Application.extend({modulePrefix:r.modulePrefix,podModulePrefix:r.podModulePrefix,Resolver:a});p(l,r.modulePrefix),i["default"]=l}),define("dummy/components/photo-swipe",["ember-cli-photoswipe/components/photo-swipe","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n}),define("dummy/controllers/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({psOpts:{index:1},items:[{src:"http://placekitten.com/g/600/400",w:600,h:400,title:"whooa"},{src:"http://placekitten.com/g/1200/900",w:1200,h:900}],actions:{initGallery:function(){this.get("myGallery").init()}}})}),define("dummy/initializers/export-application-global",["ember","dummy/config/environment","exports"],function(e,t,n){"use strict";function s(e,t){var n=i.String.classify(o.modulePrefix);o.exportApplicationGlobal&&(window[n]=t)}var i=e["default"],o=t["default"];n.initialize=s,n["default"]={name:"export-application-global",initialize:s}}),define("dummy/router",["ember","dummy/config/environment","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"],o=s.Router.extend({location:i.locationType});o.map(function(){}),n["default"]=o}),define("dummy/templates/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,o){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),o=o||{};var a,p,r,l="",d=this.escapeExpression,u=s.helperMissing;return o.buffer.push('<h2 id="title">Welcome to Ember.js</h2>\n\n'),a=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(a||0===a)&&o.buffer.push(a),o.buffer.push('\n\n<button id="btn" '),o.buffer.push(d(s.action.call(t,"initGallery",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:o}))),o.buffer.push(">Open PhotoSwipe</button>\n\n"),o.buffer.push(d((p=s["photo-swipe"]||t&&t["photo-swipe"],r={hash:{gallery:"myGallery",options:"psOpts",items:"items"},hashTypes:{gallery:"ID",options:"ID",items:"ID"},hashContexts:{gallery:t,options:t,items:t},contexts:[],types:[],data:o},p?p.call(t,r):u.call(t,"photo-swipe",r)))),o.buffer.push("\n"),l})}),define("dummy/templates/components/photo-swipe",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,o){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),o=o||{};var a,p="";return a=s._triageMustache.call(t,"yield",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(a||0===a)&&o.buffer.push(a),o.buffer.push('\n<!-- Root element of PhotoSwipe. Must have class pswp. -->\n<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">\n\n  <!-- Background of PhotoSwipe.\n    It\'s a separate element, as animating opacity is faster than rgba(). -->\n    <div class="pswp__bg"></div>\n\n    <!-- Slides wrapper with overflow:hidden. -->\n    <div class="pswp__scroll-wrap">\n\n      <!-- Container that holds slides. PhotoSwipe keeps only 3 slides in DOM to save memory. -->\n      <div class="pswp__container">\n        <!-- don\'t modify these 3 pswp__item elements, data is added later on -->\n        <div class="pswp__item"></div>\n        <div class="pswp__item"></div>\n        <div class="pswp__item"></div>\n      </div>\n\n      <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\n      <div class="pswp__ui pswp__ui--hidden">\n\n        <div class="pswp__top-bar">\n\n          <!--  Controls are self-explanatory. Order can be changed. -->\n\n          <div class="pswp__counter"></div>\n\n          <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>\n\n          <button class="pswp__button pswp__button--share" title="Share"></button>\n\n          <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>\n\n          <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>\n\n          <!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->\n          <div class="pswp__preloader">\n            <div class="pswp__preloader__icn">\n              <div class="pswp__preloader__cut">\n                <div class="pswp__preloader__donut"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">\n          <div class="pswp__share-tooltip"></div>\n        </div>\n\n        <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">\n        </button>\n\n        <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">\n        </button>\n\n        <div class="pswp__caption">\n          <div class="pswp__caption__center"></div>\n        </div>\n\n      </div>\n\n    </div>\n\n</div>\n'),p})}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var n=t+"/config/environment",s=e["default"].$('meta[name="'+n+'"]').attr("content"),i=JSON.parse(unescape(s));return{"default":i}}catch(o){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests?require("dummy/tests/test-helper"):require("dummy/app")["default"].create({});